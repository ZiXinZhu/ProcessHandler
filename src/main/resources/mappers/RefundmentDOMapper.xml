<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zzx.transactions.dao.RefundmentDOMapper" >
  <resultMap id="BaseResultMap" type="com.zzx.transactions.entity.RefundmentDO" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="refundment_id" property="refundmentId" jdbcType="VARCHAR" />
    <result column="order_id" property="orderId" jdbcType="VARCHAR" />
    <result column="money" property="money" jdbcType="VARCHAR" />
    <result column="mark" property="mark" jdbcType="VARCHAR" />
    <result column="creade_time" property="creadeTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, refundment_id, order_id, money, mark, creade_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from refundment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from refundment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zzx.transactions.entity.RefundmentDO" >
    insert into refundment (id, refundment_id, order_id, 
      money, mark, creade_time, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{refundmentId,jdbcType=VARCHAR}, #{orderId,jdbcType=VARCHAR}, 
      #{money,jdbcType=VARCHAR}, #{mark,jdbcType=VARCHAR}, #{creadeTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.zzx.transactions.entity.RefundmentDO" >
    insert into refundment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="refundmentId != null" >
        refundment_id,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="mark != null" >
        mark,
      </if>
      <if test="creadeTime != null" >
        creade_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="refundmentId != null" >
        #{refundmentId,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="money != null" >
        #{money,jdbcType=VARCHAR},
      </if>
      <if test="mark != null" >
        #{mark,jdbcType=VARCHAR},
      </if>
      <if test="creadeTime != null" >
        #{creadeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zzx.transactions.entity.RefundmentDO" >
    update refundment
    <set >
      <if test="refundmentId != null" >
        refundment_id = #{refundmentId,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=VARCHAR},
      </if>
      <if test="mark != null" >
        mark = #{mark,jdbcType=VARCHAR},
      </if>
      <if test="creadeTime != null" >
        creade_time = #{creadeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zzx.transactions.entity.RefundmentDO" >
    update refundment
    set refundment_id = #{refundmentId,jdbcType=VARCHAR},
      order_id = #{orderId,jdbcType=VARCHAR},
      money = #{money,jdbcType=VARCHAR},
      mark = #{mark,jdbcType=VARCHAR},
      creade_time = #{creadeTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>